Un algorithme est une méthode générale pour résoudre un type de problèmes.
Il est dit correct lorsque,
pour chaque instance du problème,
il se termine en produisant la bonne sortie,
c'est-à-dire qu'il résout le problème posé.

L'efficacité d'un algorithme est mesurée notamment par :

sa durée de calcul ;
sa consommation de mémoire vive (en partant du principe que chaque instruction a un temps d'exécution constant) ;
la précision des résultats obtenus (par exemple avec l'utilisation de méthodes probabilistes) ;
sa scalabilité (son aptitude à être efficacement parallélisé) ;
etc.
Les ordinateurs sur lesquels s'exécutent ces algorithmes ne sont pas infiniment rapides, 
car le temps de machine reste une ressource limitée, 
malgré une augmentation constante des performances des ordinateurs. 
Un algorithme sera donc dit performant s'il utilise 
avec parcimonie les ressources dont il dispose, 
c'est-à-dire le temps CPU, la mémoire vive et (aspect objet de recherches récentes) 
la consommation électrique. 
L’analyse de la complexité algorithmique permet de prédire 
l'évolution en temps calcul nécessaire pour amener un algorithme à son terme, 
en fonction de la quantité de données à traiter.